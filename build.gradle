
plugins {
  id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"
    id 'java'
}

group = 'com.'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.oracle.database.jdbc:ojdbc8:19.3.0.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

	runtimeOnly 'org.postgresql:postgresql'

	implementation "org.springframework.boot:spring-boot-starter-security"
	ext['spring-security.version']='6.2.4'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

}
sonar {
  properties {
    property "sonar.projectKey", "vladortegab_backend-virtual"
    property "sonar.organization", "vladortegab"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
